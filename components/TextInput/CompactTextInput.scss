@import "../../styles/variables";
@import "../../styles/placeholders";
@import "../../styles/materialdesign";
@import "./AnimationHighlighter";

:local {
    %filled-text {
        top: -12px;

        font-size: $fontSizeRegular;
    }

    %no-filled-text {
        top: 9px;

        font-size: $fontSizeBig;
    }

    .wrapper {
        position: relative;

        box-sizing: border-box;
    }

    input[type="text"].input,
    .input {
        @extend %material-input;

        display: block;
        width: 100%;
        padding: 4px 3px 3px;
        box-sizing: border-box;

        background: transparent;

        font-family: inherit;
        font-size: $fontSizeBig;
        line-height: $lineHeightRegular;

        &:focus {
            & ~ .label {
                @extend %filled-text;
            }

            & ~ .counter {
                opacity: 1;
            }
        }

        &[readonly],
        &[readonly]:focus,
        &[disabled],
        &[disabled]:focus {
            & ~ .label {
                @extend %no-filled-text;

                &.filled {
                    @extend %filled-text;
                }
            }

            & ~ .counter {
                opacity: 0;
            }
        }

        &.clearable {
            padding-right: 30px;
        }
    }

    .label {
        @extend %no-filled-text;

        position: absolute;
        left: 3px;

        box-sizing: border-box;

        transition: .2s ease all;

        color: $textSecondaryColor;
        font-family: inherit;
        font-weight: normal;
        line-height: 1;

        cursor: text;
        pointer-events: none;

        &.filled {
            @extend %filled-text;
        }
    }

    .highlight {
        position: absolute;
        top: 25%;
        left: 0;

        width: 100px;
        height: 50%;
        box-sizing: border-box;

        opacity: .5;

        pointer-events: none;

        &.is-regular {
            :global {
                animation: inputHighlighter .3s ease;
            }
        }

        &.is-error {
            :global {
                animation-name: inputErrorHighlighter;
            }
        }/* todo: fix */
    }

    .clear {
        position: absolute;
        z-index: 21;
        top: 50%;
        right: 1px;

        margin-top: -6px;

        color: $textSecondaryColor;
        font-size: $fontSizeBig;

        cursor: pointer;

        &:hover {
            color: $textErrorColor;
        }
    }

    .counter {
        @extend %as-inline-block;

        position: absolute;
        right: 0;

        margin-top: 3px;

        opacity: 0;

        transition: opacity .1s ease-in-out;

        color: $textSecondaryColor;

        &.invalid {
            opacity: 1;
        }
    }
}
